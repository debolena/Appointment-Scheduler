CREATE DATABASE Appointment_Scheduler;
USE Appointment_Scheduler;

CREATE TABLE  Roles (
	id int(10) NOT NULL AUTO_INCREMENT,
	name VARCHAR(50) DEFAULT NULL,
	PRIMARY KEY (id)
)
	

CREATE TABLE Users (
	id INT(11) NOT NULL AUTO_INCREMENT,
	username VARCHAR(50) NOT NULL,
	password CHAR(80) NOT NULL,
	first_name VARCHAR(50),
	last_name VARCHAR(50),
	email VARCHAR(50),
	mobile VARCHAR(50),
	street VARCHAR(50),
	city VARCHAR(50),
	postcode VARCHAR(50),
  PRIMARY KEY (id)
)


CREATE TABLE  Users_roles (
	user_id INT NOT NULL,
	role_id INT NOT NULL,
	PRIMARY KEY (user_id,role_id),
	KEY FK_ROLE_id (role_id),

	CONSTRAINT FK_users_user FOREIGN KEY (user_id)
	REFERENCES users (id)
	ON DELETE NO ACTION ON UPDATE NO ACTION,

	CONSTRAINT FK_roles_role FOREIGN KEY (role_id)
	REFERENCES roles (id)
	ON DELETE NO ACTION ON UPDATE NO ACTION
)


CREATE TABLE Works (
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(50),
  duration INT,
  price DECIMAL(10, 2),
  editable BOOLEAN,
  target VARCHAR(50),
  description TEXT,
  PRIMARY KEY (id)
)

CREATE TABLE IF NOT EXISTS Invoices (
	id INT NOT NULL AUTO_INCREMENT,
	number VARCHAR(50),
	status VARCHAR(50),
	total_amount DECIMAL(10, 2),
	issued DATETIME,
  PRIMARY KEY (id)
)


CREATE TABLE  Appointments (
        id INT NOT NULL AUTO_INCREMENT,
        start DATETIME,
        end DATETIME,
	canceled_at DATETIME,
	status VARCHAR(20),
	id_canceler INT,
        id_provider INT,
        id_customer INT,
        id_work INT,
	id_invoice INT,
        PRIMARY KEY (id),
	KEY id_canceler (id_canceler),
        KEY id_provider (id_provider),
        KEY id_customer (id_customer),
        KEY id_work (id_work),
	KEY id_invoice (id_invoice),
	CONSTRAINT appointments_users_canceler FOREIGN KEY (id_canceler) REFERENCES users (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
        CONSTRAINT appointments_users_customer FOREIGN KEY (id_customer) REFERENCES users (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
        CONSTRAINT appointments_works FOREIGN KEY (id_work) REFERENCES works (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
        CONSTRAINT appointments_users_provider FOREIGN KEY (id_provider) REFERENCES users (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
	CONSTRAINT appointments_invoices FOREIGN KEY (id_invoice) REFERENCES invoices (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE

)



CREATE TABLE Works_providers (
  id_user INT NOT NULL,
  id_work INT NOT NULL,
  PRIMARY KEY (id_user, id_work),
  KEY id_work (id_work),
  CONSTRAINT works_providers_users_provider FOREIGN KEY (id_user) REFERENCES users (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  CONSTRAINT works_providers_works FOREIGN KEY (id_work) REFERENCES works (id)
  ON DELETE CASCADE
  ON UPDATE CASCADE
)

CREATE TABLE Working_plans (
	id_provider INT NOT NULL,
        monday TEXT,
	tuesday TEXT,
	wednesday TEXT,
	thursday TEXT,
	friday TEXT,
	saturday TEXT,
	sunday TEXT,
  PRIMARY KEY (id_provider),
	KEY id_provider (id_provider),

	CONSTRAINT FK_appointments_provider FOREIGN KEY (id_provider)
	REFERENCES users (id)
        ON DELETE NO ACTION
  ON UPDATE NO ACTION
)


CREATE TABLE Messages(
	id INT NOT NULL AUTO_INCREMENT,
	created_at DATETIME,
	message TEXT,
	id_author INT,
        id_appointment INT,
        PRIMARY KEY (id),
	KEY id_author (id_author),
	KEY id_appointment (id_appointment),
        CONSTRAINT FK_notes_author FOREIGN KEY (id_author)
        REFERENCES users (id)
	ON DELETE NO ACTION
        ON UPDATE NO ACTION,
        CONSTRAINT FK_notes_appointment FOREIGN KEY (id_appointment)
	REFERENCES appointments (id)
	ON DELETE NO ACTION
        ON UPDATE NO ACTION
)


CREATE TABLE Corporate_Customers (
	id_customer INT NOT NULL,
	vat_number VARCHAR(256),
	company_name VARCHAR(256),
        PRIMARY KEY (id_customer),
	KEY id_customer (id_customer),
	CONSTRAINT FK_corporate_customer_user FOREIGN KEY (id_customer)
	REFERENCES users (id)
)


CREATE TABLE Providers (
	id_provider INT NOT NULL,
        PRIMARY KEY (id_provider),
	KEY id_provider (id_provider),
	CONSTRAINT FK_provider_user FOREIGN KEY (id_provider)
	REFERENCES users (id)
)


CREATE TABLE Retail_Customers (
	id_customer INT NOT NULL,
        PRIMARY KEY (id_customer),
	KEY id_customer (id_customer),
	CONSTRAINT FK_retail_customer_user FOREIGN KEY (id_customer)
	REFERENCES users (id)
)


CREATE TABLE Customers (
	id_customer INT NOT NULL,
        PRIMARY KEY (id_customer),
	KEY id_customer (id_customer),
        CONSTRAINT FK_customer_user FOREIGN KEY (id_customer)
	REFERENCES users (id)
)


CREATE TABLE Notifications (
	id INT NOT NULL AUTO_INCREMENT,
	title VARCHAR(256),
	message TEXT,
        created_at DATETIME,
        url VARCHAR(256),
	is_read BOOLEAN,
        id_user INT,
        PRIMARY KEY (id),
	KEY id_user (id_user),
        CONSTRAINT FK_notification_user FOREIGN KEY (id_user)
        REFERENCES users (id)
	ON DELETE NO ACTION
        ON UPDATE NO ACTION
)


CREATE TABLE Exchanges (
	id INT NOT NULL AUTO_INCREMENT,
	exchange_status VARCHAR(256),
        id_appointment_requestor INT,
        id_appointment_requested INT,
        PRIMARY KEY (id),
	KEY id_appointment_requestor (id_appointment_requestor),
        KEY id_appointment_requested (id_appointment_requested),
	CONSTRAINT FK_exchange_appointment_requestor FOREIGN KEY (id_appointment_requestor)
        REFERENCES appointments (id)
	ON DELETE NO ACTION
        ON UPDATE NO ACTION,
  	CONSTRAINT FK_exchange_appointment_requested FOREIGN KEY (id_appointment_requested)
        REFERENCES appointments (id)
	ON DELETE NO ACTION
        ON UPDATE NO ACTION
)


INSERT INTO Roles (id,name) VALUES
  (1,'ROLE_ADMIN'),
  (2,'ROLE_PROVIDER'),
  (3,'ROLE_CUSTOMER'),
  (4,'ROLE_CUSTOMER_CORPORATE'),
  (5,'ROLE_CUSTOMER_RETAIL');
 

INSERT INTO Users (id, username, password)
VALUES (1, 'admin', '$2a$10$EqKcp1WFKVQISheBxk');
INSERT INTO users_roles (user_id, role_id)
VALUES (1, 1);

INSERT INTO users (id, username, password)
VALUES (2, 'provider', '$2a$10$EqKcp1WFKVQISheBxkQJoOqFbsWDz');
INSERT INTO providers (id_provider)
VALUES (2);
INSERT INTO users_roles (user_id, role_id)
VALUES (2, 2);


INSERT INTO users (id, username, password)
VALUES (3, 'customer_r', '$2a$10$EqKcp1WFKVQISheBxkQJoOqFbsWDzGJXRz');
INSERT INTO customers (id_customer)
VALUES (3);
INSERT INTO retail_customers (id_customer)
VALUES (3);
INSERT INTO users_roles (user_id, role_id)
VALUES (3, 3);
INSERT INTO users_roles (user_id, role_id)
VALUES (3, 5);


INSERT INTO users (id, username, password)
VALUES (4, 'customer_c', '$2a$10$EqKcp1WFKVQISheBxkQJoOqFbsWDzGJXRz');
INSERT INTO customers (id_customer)
VALUES (4);
INSERT INTO corporate_customers (id_customer, vat_number, company_name)
VALUES (4, '123456789', 'Company name');
INSERT INTO users_roles (user_id, role_id)
VALUES (4, 3);
INSERT INTO users_roles (user_id, role_id)
VALUES (4, 4);

INSERT INTO works (id, name, duration, price, editable, target, description)
VALUES (1, 'English lesson', 60, 100.00, true, 'retail',
        'This is english lesson with duration 60 minutes and price 100 pln');

INSERT INTO works_providers
VALUES (2, 1);
INSERT INTO working_plans
VALUES (2,
        '{"workingHours":{"start":[6,0],"end":[18,0]},"breaks":[],"timePeroidsWithBreaksExcluded":[{"start":[6,0],"end":[18,0]}]}',
        '{"workingHours":{"start":[6,0],"end":[18,0]},"breaks":[],"timePeroidsWithBreaksExcluded":[{"start":[6,0],"end":[18,0]}]}',
        '{"workingHours":{"start":[6,0],"end":[18,0]},"breaks":[],"timePeroidsWithBreaksExcluded":[{"start":[6,0],"end":[18,0]}]}',
        '{"workingHours":{"start":[6,0],"end":[18,0]},"breaks":[],"timePeroidsWithBreaksExcluded":[{"start":[6,0],"end":[18,0]}]}',
        '{"workingHours":{"start":[6,0],"end":[18,0]},"breaks":[],"timePeroidsWithBreaksExcluded":[{"start":[6,0],"end":[18,0]}]}',
        '{"workingHours":{"start":[6,0],"end":[18,0]},"breaks":[],"timePeroidsWithBreaksExcluded":[{"start":[6,0],"end":[18,0]}]}',
        '{"workingHours":{"start":[6,0],"end":[18,0]},"breaks":[],"timePeroidsWithBreaksExcluded":[{"start":[6,0],"end":[18,0]}]}');